{
  "useState hook": {
    "prefix": "ush",
    "body": "const [${1:state}, set${2:State}] = useState(${3:initialState})$0"
  },
  "useEffect hook": {
    "prefix": "ufh",
    "body": [
      "useEffect(() => {",
      "\t$1",
      "}, [$2])$0"
    ]
  },
  "useCallback hook": {
    "prefix": "ucbh",
    "body": [
      "const ${1:memorizedCb} = useCallback(",
      "\t() => {",
      "\t\t$2",
      "\t[$3]",
      ")$0"
    ]
  },
  "useContext hook": {
    "prefix": "uch",
    "body": "const $1 = useContext($2)$0"
  },
  "useRef hook": {
    "prefix": "urh",
    "body": "const $1 = useRef($2)$0"
  },
  "useReducer hook": {
    "prefix": "urdh",
    "body": "const [${1:state}, ${2: dispatch}] = useReducer(${3:reducer}, ${4:initialArg})$0"
  },
  "useMemo hook": {
    "prefix": "umh",
    "body": "const ${1:memorized} = useMemo(() => ${2:compute})$0"
  }
}
