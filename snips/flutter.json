{
  "stateless widget": {
    "prefix": "statel",
    "body": [
      "class ${1:name} extends StatelessWidget {",
      "\tconst $1({Key? key}) : super(key: key);\n",
      "\t@override",
      "\tWidget build(BuildContext context) {",
      "\t\treturn Container(",
      "\t\t\tchild: ${2:null},",
      "\t\t);",
      "\t}",
      "}"
    ]
  },
  "statefull widget": {
    "prefix": "statef",
    "body": [
      "class ${1:WidgetName} extends StatefulWidget {",
      "\tconst $1({Key? key}) : super(key: key);\n",
      "\t@override",
      "\t_${1}State createState() => _${1}State();",
      "}\n",
      "class _${1}State extends State<$1> {\n",
      "\t@override",
      "\tWidget build(BuildContext context) {",
      "\t\treturn ${0:Container()};",
      "\t}",
      "}"
    ]
  },
  "build method": {
    "prefix": "build",
    "body": [
      "@override",
      "Widget build(BuildContext context) {",
      "\treturn $0;",
      "}"
    ]
  },
  "material app": {
    "prefix": "mateapp",
    "body": [
      "import 'package:flutter/material.dart';\n",
      "void main() => runApp(const MyApp());\n",
      "class MyApp extends StatelessWidget {",
      "\tconst MyApp({Key? key}) : super(key: key);\n",
      "\t@override",
      "\tWidget build(BuildContext context) {",
      "\t\treturn MaterialApp(",
      "\t\t\ttitle: 'Material App',",
      "\t\t\thome: Scaffold(",
      "\t\t\t\tappBar: AppBar(title: const Text('App')),",
      "\t\t\t\tbody: ${0:const Center(child: Text('Hello'),),}",
      "\t\t\t),",
      "\t\t);",
      "\t}",
      "}"
    ]
  },
  "material screen": {
    "prefix": "matesc",
    "body": [
      "import 'package:flutter/material.dart';\n",
      "class ${1:HomeScreen} extends StatelessWidget {",
      "\tconst $1({Key? key}) : super(key: key);",
      "\t@override",
      "\tWidget build(BuildContext context) {",
      "\t\treturn Scaffold(",
      "\t\t\tappBar: AppBar(",
      "\t\t\t\ttitle: const Text('Home'),",
      "\t\t\t),",
      "\t\t\tbody: Center(",
      "\t\t\t\tchild: ${0:Text('Awesome, Home Page'),}",
      "\t\t\t),",
      "\t\t);",
      "\t}",
      "}"
    ]
  },
  "main": {
    "prefix": "main",
    "body": [
      "import 'package:flutter/material.dart';\n",
      "void main() {",
      "\trunApp(const ${0:Application()});",
      "}"
    ]
  },
  "alignment": {
    "prefix": "align",
    "body": "alignment: Alignment.${1:center}$0"
  },
  "MainAxisAlignment": {
    "prefix": "maa",
    "body": "mainAxisAlignment: MainAxisAlignment.${1:center}$0"
  },
  "CrossAxisAlignment": {
    "prefix": "caa",
    "body": "crossAxisAlignment: CrossAxisAlignment.${1:stretch}$0"
  },
  "title": {
    "prefix": "title",
    "body": "title: const Text('${1:hello world}')$0"
  },
  "actions": {
    "prefix": "actions",
    "body": [
      "actions: <Widget>[",
      "\t$1",
      "]$0"
    ]
  },
  "children": {
    "prefix": "children",
    "body": [
      "children: <Widget>[",
      "\t$1",
      "]$0"
    ]
  },
  "constraints": {
    "prefix": "constraints",
    "body": "constraints: BoxConstraints(${1:maxWidth: 100})$0"
  },
  "edge insets": {
    "prefix": "edgei",
    "body": "EdgeInsets.${1:all}($2)$0"
  },
  "setState": {
    "prefix": "sets",
    "body": [
      "setState(() {",
      "\t$1",
      "})$0"
    ]
  },
  "Navigator.push": {
    "prefix": "navpush",
    "body": [
      "Navigaror.push(",
      "\tcontext,",
      "\tMaterialPageRoute(builder: (context) => ${1:RouteName()}),",
      ");$0"
    ]
  },
  "Navigator.pop": {
    "prefix": "navpop",
    "body": "Navigator.pop(context);$0"
  },
  "Navigator.pushNamed": {
    "prefix": "navpushn",
    "body": "Navigator.pushNamed(context, '${1:/name}');$0"
  },
  "Define route": {
    "prefix": "route",
    "body": "'${1:/home}': (context) => ${2:FirstScreen()},$0"
  },
  "ListView Builder": {
    "prefix": "lbuild",
    "body": [
      "ListView.builder(",
      "\titemCount: ${1:items.length},",
      "\titemBuilder: (context, idx) {",
      "\t\treturn ${2:widget()};",
      "\t},",
      ");$0"
    ]
  },
  "GlobalKey": {
    "prefix": "globalk",
    "body": "final ${1:_formKey} = GlobalKey<FormState>();$0"
  },
  "Form Validator": {
    "prefix": "validator",
    "body": [
      "validator: (String? value) {",
      "\t$1",
      "},$0"
    ]
  },
  "OnAction": {
    "prefix": "on",
    "body": [
      "on${1:Presed}: () {",
      "\t$2",
      "},$0"
    ]
  }
}
